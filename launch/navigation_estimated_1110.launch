<launch>
    <!-- map server -->
    <arg name="map_file" default="$(find mobile_robot_simulator)/map/glbmap.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" output="screen"/>

    <!-- tf satic -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 100" />
    <node pkg="tf" type="static_transform_publisher" name="baselink_to_imu" args="0 0 0 0 0 0 base_link imu_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="baselink_to_gps" args="0 0 0 0 0 0 base_link gps 100" />
    <node pkg="tf" type="static_transform_publisher" name="baselink_to_laser" args="0 0 0 0 0 0 base_link laser 100" />

    <!-- imu publish -->
    <include file="$(find system_supervisor)/launch/wit_motion.launch" />

    <!-- gps publish -->
    <include file="$(find system_supervisor)/launch/nmea_serial_driver.launch" />

    <!--/fix(sensor_msgs/NavSatFix) convert to /gps_path(nav_msgs/Path)-->
    <node pkg="gnss_imu_odom_ESKF" name="eskf_localization" type="eskf_localization" output="screen"/>

    <!--connect odrive and subscribe /cmd_vel calcurlate odometry-->
    <node pkg="odrive_motor_control" name="odrive_simple_twist_driver" type="odrive_simple_twist_driver.py" output="screen"/>-->

    <!--keyboatd teleop publish /cmd_vel-->
    <!--<node pkg="odrive_motor_control" name="keyboard_teleop" type="keyboard_teleop.py" output="screen"/>-->

    <!-- Joystick Control -->
    <include file="$(find joy_to_twist)/launch/joy_to_twist.launch" />
    
    <!-- Ledtape Control -->
    <include file="$(find rpi_led_tape)/launch/ledtape_control.launch" />

    <!-- Voice Control -->
    <!--<include file="$(find system_supervisor)/launch/voice_control.launch" />-->
    
    <!-- RPLidar S1 -->
    <!--<include file="$(find system_supervisor)/launch/rplidar_s1.launch" />-->

    <!--pure_pursuit Control-->
    <include file="$(find system_supervisor)/launch/pure_pursuit_estimated_1110.launch" />

    <!-- supervisor node -->
    <node pkg="system_supervisor" name="supervisor" type="supervisor" output="screen"/>
    <!--<node pkg="system_supervisor" name="supervisor_obstacle_avoidance" type="supervisor_obstacle_avoidance" output="screen"/>-->

    <!-- obstacle aboidance node  -->
    <!--<node pkg="obstacle_avoidance" name="obstacle_avoidance_rplidar_test" type="obstacle_avoidance_rplidar_test"/>-->

    <!--rviz-->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find system_supervisor)/rviz/navigation_estimated_pose.rviz" required="true"/>
</launch>